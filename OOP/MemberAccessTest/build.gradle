/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

// projectで設定される依存性です。repositoryで指定したレポジトリ情報から取得します。
// 書式としては「グループ名:名前:バージョン」となります。
dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

// applicationプラグインと合わせて以下でmainClassを指定するとjavaコマンドを使って実行する代わりにgradle経由でjavaアプリケーションを実行できる(gradle run)
// see: https://qiita.com/opengl-8080/items/4c1aa85b4737bd362d9e
application {
    // gradle runで実行したいクラスを指定する
    mainClass = 'GraddleApp.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// 独自タスク"helloworld"の追加
task helloWorld {
        description = "This is a very tiny helloWorld."

        // doFirstはタスクの一番最初の行う処理、doLastはタスクの一番最後に行う処理です
        doFirst {
                println "Hello, world! doFirst"
        }

        doLast {
                println "Hello, world! doLast"
        }
}

// 依存処理としてgreeting2を呼び出すとgreeting1も呼び出されます
task greeting1 {
        doLast {
                println "Good morning!!"
        }
}

task greeting2 (dependsOn:'greeting1') {
        doLast {
                println "Good evening!!"
        }
}


// build.gradleと同一ディレクトリ中に存在するgradle.propertiesファイルから環境変数を取得する
task helloenv {
        description = "Read env info from ./gradle.properties file"

        doLast {
                println "hoge=${hoge}"
        }
}
